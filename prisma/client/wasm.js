
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.BlockScalarFieldEnum = {
  id: 'id',
  chain: 'chain',
  hash: 'hash',
  parentHash: 'parentHash',
  timestamp: 'timestamp',
  processedAt: 'processedAt'
};

exports.Prisma.TransactionScalarFieldEnum = {
  hash: 'hash',
  blockId: 'blockId',
  chain: 'chain',
  from: 'from',
  to: 'to',
  valueWei: 'valueWei',
  success: 'success',
  idx: 'idx',
  createdAt: 'createdAt'
};

exports.Prisma.TokenTransferScalarFieldEnum = {
  id: 'id',
  chain: 'chain',
  blockId: 'blockId',
  txHash: 'txHash',
  logIdx: 'logIdx',
  token: 'token',
  from: 'from',
  to: 'to',
  amountRaw: 'amountRaw',
  createdAt: 'createdAt'
};

exports.Prisma.WalletDailyScalarFieldEnum = {
  id: 'id',
  chain: 'chain',
  address: 'address',
  day: 'day',
  txCount: 'txCount',
  volumeWei: 'volumeWei'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.ChainId = exports.$Enums.ChainId = {
  ETH: 'ETH',
  OP: 'OP',
  BSC: 'BSC',
  POLY: 'POLY',
  ARB: 'ARB'
};

exports.Prisma.ModelName = {
  Block: 'Block',
  Transaction: 'Transaction',
  TokenTransfer: 'TokenTransfer',
  WalletDaily: 'WalletDaily'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/mathew/dev/chain-dash/apps/api/prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/mathew/dev/chain-dash/infra/db/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../.env",
    "schemaEnvPath": "../../../../.env"
  },
  "relativePath": "../../../../infra/db/prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  // from infra/db/prisma to repo root is ../../../\n  // then into apps/api/prisma/client\n  output   = \"../../../apps/api/prisma/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum ChainId {\n  ETH\n  OP\n  BSC\n  POLY\n  ARB\n}\n\nmodel Block {\n  id          BigInt   @id\n  chain       ChainId\n  hash        String   @unique\n  parentHash  String\n  timestamp   DateTime @db.Timestamptz(6)\n  processedAt DateTime @default(now())\n\n  @@index([chain, timestamp])\n}\n\nmodel Transaction {\n  hash      String   @id\n  blockId   BigInt\n  chain     ChainId\n  from      String   @db.VarChar(42)\n  to        String?  @db.VarChar(42)\n  valueWei  Decimal  @db.Decimal(78, 0)\n  success   Boolean\n  idx       Int\n  createdAt DateTime @default(now())\n\n  @@index([chain, from])\n  @@index([chain, to])\n  @@index([chain, blockId])\n}\n\nmodel TokenTransfer {\n  id        BigInt   @id @default(autoincrement())\n  chain     ChainId\n  blockId   BigInt\n  txHash    String\n  logIdx    Int\n  token     String   @db.VarChar(42)\n  from      String   @db.VarChar(42)\n  to        String   @db.VarChar(42)\n  amountRaw Decimal  @db.Decimal(78, 0)\n  createdAt DateTime @default(now())\n\n  @@unique([txHash, logIdx])\n  @@index([chain, token])\n  @@index([chain, from])\n  @@index([chain, to])\n}\n\nmodel WalletDaily {\n  id        BigInt   @id @default(autoincrement())\n  chain     ChainId\n  address   String   @db.VarChar(42)\n  day       DateTime @db.Date\n  txCount   Int      @default(0)\n  volumeWei Decimal  @default(0) @db.Decimal(78, 0)\n\n  @@unique([chain, address, day])\n}\n",
  "inlineSchemaHash": "f37b1f45eacb3430cc8bdd3898e3ed3e398370d3074d66083da41598c38b603f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Block\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"chain\",\"kind\":\"enum\",\"type\":\"ChainId\"},{\"name\":\"hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Transaction\":{\"fields\":[{\"name\":\"hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"blockId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"chain\",\"kind\":\"enum\",\"type\":\"ChainId\"},{\"name\":\"from\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"to\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"valueWei\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"success\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"idx\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TokenTransfer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"chain\",\"kind\":\"enum\",\"type\":\"ChainId\"},{\"name\":\"blockId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"txHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logIdx\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"from\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"to\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amountRaw\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"WalletDaily\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"chain\",\"kind\":\"enum\",\"type\":\"ChainId\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"day\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"txCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"volumeWei\",\"kind\":\"scalar\",\"type\":\"Decimal\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

