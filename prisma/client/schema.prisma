generator client {
  provider = "prisma-client-js"
  // from infra/db/prisma to repo root is ../../../
  // then into apps/api/prisma/client
  output   = "../../../apps/api/prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ChainId {
  ETH
  OP
  BSC
  POLY
  ARB
}

model Block {
  id          BigInt   @id
  chain       ChainId
  hash        String   @unique
  parentHash  String
  timestamp   DateTime @db.Timestamptz(6)
  processedAt DateTime @default(now())

  @@index([chain, timestamp])
}

model Transaction {
  hash      String   @id
  blockId   BigInt
  chain     ChainId
  from      String   @db.VarChar(42)
  to        String?  @db.VarChar(42)
  valueWei  Decimal  @db.Decimal(78, 0)
  success   Boolean
  idx       Int
  createdAt DateTime @default(now())

  @@index([chain, from])
  @@index([chain, to])
  @@index([chain, blockId])
}

model TokenTransfer {
  id        BigInt   @id @default(autoincrement())
  chain     ChainId
  blockId   BigInt
  txHash    String
  logIdx    Int
  token     String   @db.VarChar(42)
  from      String   @db.VarChar(42)
  to        String   @db.VarChar(42)
  amountRaw Decimal  @db.Decimal(78, 0)
  createdAt DateTime @default(now())

  @@unique([txHash, logIdx])
  @@index([chain, token])
  @@index([chain, from])
  @@index([chain, to])
}

model WalletDaily {
  id        BigInt   @id @default(autoincrement())
  chain     ChainId
  address   String   @db.VarChar(42)
  day       DateTime @db.Date
  txCount   Int      @default(0)
  volumeWei Decimal  @default(0) @db.Decimal(78, 0)

  @@unique([chain, address, day])
}
